name: build and deploy auth-proxy
on:
  push:
    branches:
      - main
    paths:
      - auth-proxy/**
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment which should be deployed'
        required: true
        default: 'production'
        type: choice
        options:
          - production

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}-auth-proxy
  DOCKER_IMAGE_TAG: ${{ github.run_number }}
  DEPLOY_VERSION_PARAMETER_NAME: auth_proxy_version


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3

      - name: "Setup Docker buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Log into registry ${{ env.REGISTRY }}"
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and push Docker image"
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./auth-proxy
          file: ./auth-proxy/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: "Set up Ansible for deployment"
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.9
          cache: 'pip'

      - name: "Install Ansible"
        working-directory: ./deployment
        run: |
          pip install -r requirements.txt

      - name: "Deploy auth-proxy"
        if: github.event_name != 'pull_request'
        working-directory: ./deployment
        run: |
          ./make.sh deploy --vault_password ${{ secrets.VAULT_PASSWORD }} --environment ${{ github.event.inputs.environment || 'production' }} --service auth-proxy
